"use strict";
/*!
 * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
require("mocha");
const optimizer_1 = require("../src/engine/optimizer");
const network_1 = require("../src/filters/network");
function f(lines) {
    const filters = [];
    for (const line of lines) {
        const filter = network_1.default.parse(line, true);
        (0, chai_1.expect)(filter).not.to.be.null;
        if (filter !== null) {
            filters.push(filter);
        }
    }
    return filters;
}
describe('#optimizeNetwork', () => {
    it('combine into regexps', () => {
        (0, chai_1.expect)((0, optimizer_1.optimizeNetwork)(f([
            '/stats/tracking.',
            '/php-stats.php?',
            '.php?stats=',
            '/banner.stats?',
            '/php/stats/*',
            '_stats.js?',
            '/stats-tracking.js',
            '/b/stats?',
            '/stats/impression',
            '/php/stats.php?',
            '/stats/visitors',
            '/stats.gif?',
            '/stats/?js',
            '/stats.php?*http',
            '/stats?object',
            '.php?p=stats&',
            '/php-stats.js',
            '/php-stats.js/',
        ])).map((filter) => filter.toString())).to.have.lengthOf(1);
    });
});
//# sourceMappingURL=optimizer.test.js.map