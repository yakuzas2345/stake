"use strict";
/*!
 * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
require("mocha");
const data_view_1 = require("../src/data-view");
const lists_1 = require("../src/lists");
const utils_1 = require("./utils");
describe('Make sure size estimate is accurate', () => {
    const { cosmeticFilters, networkFilters } = (0, lists_1.parseFilters)(utils_1.allLists, { debug: true });
    function testSizeEstimate(filters, compression) {
        const buffer = data_view_1.StaticDataView.allocate(1000000, { enableCompression: compression });
        for (let i = 0; i < filters.length; i += 1) {
            const filter = filters[i];
            const estimate = filter.getSerializedSize(compression);
            // Serialize filter
            buffer.seekZero();
            filter.serialize(buffer);
            const realSize = buffer.pos;
            if (estimate !== realSize) {
                (0, chai_1.expect)(estimate, filter.toString()).to.equal(realSize);
            }
        }
    }
    it('network', () => {
        testSizeEstimate(networkFilters, false);
    });
    it('network (compression)', () => {
        testSizeEstimate(networkFilters, true);
    });
    it('cosmetic', () => {
        testSizeEstimate(cosmeticFilters, false);
    });
    it('cosmetic (compression)', () => {
        testSizeEstimate(cosmeticFilters, true);
    });
});
//# sourceMappingURL=filters-size-estimation.test.js.map